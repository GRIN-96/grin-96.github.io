{"componentChunkName":"component---src-templates-post-jsx","path":"/250205_JPA/","result":{"data":{"site":{"siteMetadata":{"title":"grin.blog"}},"markdownRemark":{"id":"bf7d2b47-e12b-5f8b-a831-24b66c77561b","excerpt":"JPA란? Java Persistence API 자바 진영의 ORM 기술 표준 Object-Relational Mapping(객체 관계 매핑) 객체는 객체대로 설계 관계형 데이터베이스는 관계형 데이터베이스대로 설계 ORM 프레임워크가 중간에서 매핑 JPA를 사용하는 이유 SQL 중심 개발에서 객체 중심으로 개발 ORM이 중간에서 문제 해결 자바 객체 컬렉…","html":"<h2 id=\"JPA란\" style=\"position:relative;\"><a href=\"#JPA%EB%9E%80\" aria-label=\"JPA란 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>JPA란?</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. JPA는 개발자의 sql 쿼리 작업을 최소화 해준다.\n\n2. 컬럼 추가 시 쿼리문을 일괄 수정해야하는 상황을 해결해준다.\n\n3. CRUD 쿼리를 간단하게 생성할 수 있도록 도와준다\n\n4. 객체를 자바 컬렉션에 저장하 듯 DB에 저장하고자 하는 목적으로 만들어졌다.</code></pre></div>\n<h2 id=\"Java-Persistence-API\" style=\"position:relative;\"><a href=\"#Java-Persistence-API\" aria-label=\"Java Persistence API permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Java Persistence API</h2>\n<p><strong>자바 진영의 ORM 기술 표준</strong></p>\n<ul>\n<li>\n<p>Object-Relational Mapping(객체 관계 매핑)</p>\n<ul>\n<li>객체는 객체대로 설계</li>\n<li>관계형 데이터베이스는 관계형 데이터베이스대로 설계</li>\n<li>ORM 프레임워크가 중간에서 매핑</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"JPA를-사용하는-이유\" style=\"position:relative;\"><a href=\"#JPA%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"JPA를 사용하는 이유 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>JPA를 사용하는 이유</h2>\n<ul>\n<li>\n<p>SQL 중심 개발에서 객체 중심으로 개발</p>\n<ul>\n<li>ORM이 중간에서 문제 해결</li>\n<li>자바 객체 컬렉션 조회하듯 던지면 된다.</li>\n</ul>\n</li>\n<li>\n<p>생산성</p>\n<ul>\n<li>SQL 반복 작업을 하지 않음</li>\n</ul>\n</li>\n<li>\n<p>유지보수</p>\n<ul>\n<li>JPA가 직접 SQL 작업을 수행하기에 유지보수 측면에서 장점이 있음</li>\n</ul>\n</li>\n<li>패러다임의 불일치 해결</li>\n<li>\n<p>데이터 접근 추상화와 벤더 독립성</p>\n<ul>\n<li>JPA는 추상화된 데이터 접근 계층을 제공해 특정 벤더에 종속적이지 않음</li>\n<li>어떤 DB를 사용하는 지 설정만 해주면 됨</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"유지보수\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EC%A7%80%EB%B3%B4%EC%88%98\" aria-label=\"유지보수 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>유지보수</h2>\n<ul>\n<li>JPA 필드만 추가해주면 SQL은 JPA가 처리해준다.</li>\n<li>\n<p>트랜젝션 안에서 조회후 변경 진행하면 트랜젝션 변경 시점에서 업데이트 쿼리가 진행되며 커밋이 진행된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Member</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> memberId<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> tel<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 추가된 필드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"🌱 JPA란?","date":"February 05, 2025","update":"February 05, 2025","tags":["MSA","Microservice","Monolithic"],"series":"🌱 JPA(Java Persistence API)"},"fields":{"slug":"/250205_JPA/","readingTime":{"minutes":0.915}}},"seriesList":{"edges":[{"node":{"id":"bf7d2b47-e12b-5f8b-a831-24b66c77561b","fields":{"slug":"/250205_JPA/"},"frontmatter":{"title":"🌱 JPA란?"}}}]},"previous":{"fields":{"slug":"/250120_VS/"},"frontmatter":{"title":"🍃 Monolithic VS MSA"}},"next":null},"pageContext":{"id":"bf7d2b47-e12b-5f8b-a831-24b66c77561b","series":"🌱 JPA(Java Persistence API)","previousPostId":"4fe26e87-179f-52be-81cd-b428af7f7b6b","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}