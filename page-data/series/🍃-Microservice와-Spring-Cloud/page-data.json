{"componentChunkName":"component---src-templates-series-jsx","path":"/series/🍃-Microservice와-Spring-Cloud/","result":{"data":{"posts":{"nodes":[{"excerpt":"Cloud Native Architecture(클라우드 네이티브 아키텍처)란 클라우드 환경을 최대한 활용하도록 설계된 소프트웨어 아키텍처 패턴 확장 가능한 아키텍처 시스템의 수평적 확장에 유연 확장된 서버로 시스템의 부하 분산, 가용성 보장 시스템 또는, 서비스 애플리케이션 단위의 패키지 (컨테이너 기반 패키지) 모니터링 탄력적 아키텍처 서비스 생성 - …","fields":{"slug":"/microservice_post/"},"frontmatter":{"date":"January 13, 2025","update":"Jan 13, 2025","title":"🍃 Cloud Native Architecture","tags":["MSA","Cloud Native Architecture"]}},{"excerpt":"클라우드 환경에서 최적화되어 동작하도록 설계된 애플리케이션 컨테이너, 마이크로서비스, CI/CD, DevOps, 동적 오케스트레이션(Kubernetes) 등을 활용하여 유연성과 확장성을 극대화하는 것이 특징 특징 1. 지속적인 통합, CI (Continuous Integration) 통합 서버, 소스관리 (SCM), 빌드 도구, 테스트 도구 ex ) Je…","fields":{"slug":"/microservice_post_1/"},"frontmatter":{"date":"January 13, 2025","update":"Jan 13, 2025","title":"🍃 Cloud Native Application","tags":["MSA","Cloud Native Application"]}},{"excerpt":"Cloud Native Application 개발을 위한 12가지 원칙 1.  CODEBASE 코드베이스는 Git 저장소 하나로 관리 여러 환경(개발/테스트/운영)은 동일한 코드에서 분기(branch)하여 관리 한 코드베이스 = 하나의 애플리케이션 2.  DEPENDENCY 애플리케이션 내에서 종속성을 해결 컨테이너화된 환경에서는 의존성이 포함된 Dock…","fields":{"slug":"/microservice_post_2/"},"frontmatter":{"date":"January 13, 2025","update":"Jan 13, 2025","title":"🍃 12 Factors","tags":["MSA","12 Factors"]}},{"excerpt":"Monolithic 애플리케이션을 하나의 소프트웨어 안에 포함시켜 개발하는 방식 모든 업무 로직이 하나의 애플리케이션 형태로 패키지 되어 서비스 서비스 하나가 수정되면 전체가 재 패키징 되어 배포 애플리케이션에서 사용하는 데이터가 한곳에 모여 참조되어 서비스 되는 형태 MSA - Micro Service Aplication 복잡한 애플리케이션을 독립적인 …","fields":{"slug":"/250120_VS/"},"frontmatter":{"date":"January 20, 2025","update":"Jan 20, 2025","title":"🍃 Monolithic VS MSA","tags":["MSA","Microservice","Monolithic"]}}]}},"pageContext":{"series":"🍃 Microservice와 Spring Cloud"}},"staticQueryHashes":[],"slicesMap":{}}