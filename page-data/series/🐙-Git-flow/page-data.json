{"componentChunkName":"component---src-templates-series-jsx","path":"/series/🐙-Git-flow/","result":{"data":{"posts":{"nodes":[{"excerpt":"형상 관리 이번에 저희 회사에서는, 신규 개발을 앞두고 형상 관리가 이루어지지 않았던 기존 환경에서 GitHub를 활용한 체계적인 형상 관리 시스템을 도입하게 되었습니다. Git flow 전략 1. BRANCH 저희 팀은 Branch를 , ,  이렇게 3가지를 가져가기로 했습니다.  MAIN : 실제 서버에 배포되는 브랜치 DEV : 테스트 서버에 배포되…","fields":{"slug":"/250116_git-flow/"},"frontmatter":{"date":"January 15, 2025","update":"Jan 15, 2025","title":"🐙 Git-flow","tags":["git","git flow"]}},{"excerpt":"Issue 추가 기능 개발로 FEATURE_A 브랜치를 DEV에 Rebase + Merge 후 QA 요청 QA가 완료되기 전에 동일한 파일에서 추가 수정 사항 발생 해당 수정 사항을 FEATURE_B 브랜치에서 DEV에 Rebase + Merge Rebase 과정에서 FEATURE_A의 코드가 운영 서버에 반영되면 에러 발생 가능성이 있어 일부 코드 누락…","fields":{"slug":"/250115_git-issue/"},"frontmatter":{"date":"January 16, 2025","update":"Jan 16, 2025","title":"🐙 Git-flow issue","tags":["git","git flow"]}}]}},"pageContext":{"series":"🐙 Git-flow"}},"staticQueryHashes":[],"slicesMap":{}}